import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

import static org.junit.jupiter.api.Assertions.assertEquals;

/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
D = |Pk − Pj| is minimised; what is the value of D?
*/

class E44 {
    public static void main(String[] args) {
        System.out.println(findResult());
    }

    private static long findResult() {
        long result = 0;
        for (long i = 3; i < 1000000; i++) {

        }
        return result;
    }

    static long pentagonNumber(long x) {
        return x * (3 * x - 1) / 2;
    }

    @ParameterizedTest
    @CsvSource({"15,4", "1000,1069"})
    void test(int parameter, int expected) {
        assertEquals(expected, findResult());

    }

    @Test
    void research() {
        for (long i = 1; i <= 100; i++) {
            long p = pentagonNumber(i);
            System.out.printf("P(%d) = %d%n", i, p);
            //System.out.printf("F %d = %d%n", i, findResult(i));
        }
    }

}
